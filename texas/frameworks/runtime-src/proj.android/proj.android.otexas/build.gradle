apply plugin: 'com.android.application'

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':proj.android.lib.core')
    implementation project(':proj.android.lib.iab')
    implementation project(':proj.android.lib.facebook')
    implementation project(':proj.android.lib.sharesdk')
    implementation project(':proj.android.lib.giantvoice')
    implementation project(':proj.android.lib.umeng')
    implementation project(':proj.android.lib.line')
    implementation project(':proj.android.lib.adjust')
    implementation project(':proj.android.lib.firebase')

    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:28.0.0'
}

android {
    compileSdkVersion 31
    buildToolsVersion "28.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.opentexas.gametexas"
        minSdkVersion 26
        targetSdkVersion 31

        ndk {
            abiFilters 'armeabi'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDir(['libs'])
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        debug {
        }
        release {
            Properties properties = new Properties()
            //properties.load(project.rootProject.file('ant.properties').newDataInputStream())
            properties.load(project.file('ant.properties').newDataInputStream())
            def keyAlias_ = properties.getProperty('key.alias')
            def keyPassword_ = properties.getProperty('key.alias.password')
            def storeFile_ = properties.getProperty('key.store')
            def storePassword_ = properties.getProperty('key.store.password')
            keyAlias keyAlias_
            keyPassword keyPassword_
            storeFile file(storeFile_)
            storePassword storePassword_
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

//configurations.all {
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested
//        if (requested.group == 'com.android.support') {
//            if (!requested.name.startsWith("multidex")) {
//                details.useVersion '26.1.0'
//            }
//        }
//    }
//}

apply plugin: 'com.google.gms.google-services'
