# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# 代码混淆压缩比，在0和7之间，默认为5，一般不需要改
-optimizationpasses 5

# 混淆时不使用大小写混合，混淆后的类名为小写
-dontusemixedcaseclassnames

# 指定不去忽略非公共的库的类
-dontskipnonpubliclibraryclasses

# 指定不去忽略非公共的库的类的成员
-dontskipnonpubliclibraryclassmembers

# 有了verbose这句话，混淆后就会生成映射文件
# 包含有类名->混淆后类名的映射关系
# 然后使用printmapping指定映射文件的名称
-verbose
-printmapping proguardMapping.txt

# Optimization is turned off by default. Dex does not like code run
# through the ProGuard optimize and preverify steps (and performs some
# of these optimizations on its own).
#不优化输入的类文件
-dontoptimize

# 不做预校验，preverify是proguard的4个步骤之一
# Android不需要preverify，去掉这一步可加快混淆速度
-dontpreverify

#指定混淆时的算法，后面的参数是一个过滤器  
#这个过滤器是谷歌推荐的算法，一般也不会改变  
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/* 

# Note that if you want to enable optimization, you cannot just
# include optimization flags in your own project configuration file;
# instead you will need to point to the
# "proguard-android-optimize.txt" file instead of this one from your
# project.properties file.

#假如项目中有用到注解，应加入这行配置,对JSON实体映射也很重要,eg:fastjson 
-keepattributes *Annotation*

# -keep public class com.google.vending.licensing.ILicensingService
# -keep public class com.android.vending.licensing.ILicensingService

# 避免混淆泛型，这在JSON实体映射时非常重要，比如fastJson
-keepattributes Signature

#抛出异常时保留代码行号，在异常分析中可以方便定位
-keepattributes SourceFile,LineNumberTable

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
# 保留所有的本地native方法不被混淆
-keepclasseswithmembernames class * {
    native <methods>;
}

# keep setters in Views so that animations can still work.
# see http://proguard.sourceforge.net/manual/examples.html#beans
# 保留自定义控件（继承自View）不被混淆
-keepclassmembers public class * extends android.view.View {
   void set*(***);
   *** get*();
   public <init>(android.content.Context);
   public <init>(android.content.Context, android.util.AttributeSet);
   public <init>(android.content.Context, android.util.AttributeSet, int);
}

# We want to keep methods in Activity that could be used in the XML attribute onClick
#保持指定规则的方法不被混淆（Android layout 布局文件中为控件配置的onClick方法不能混淆
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
#保持枚举 enum 不被混淆
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

#保持 Parcelable 不被混淆（aidl文件不能去混淆） 
-keepclassmembers class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator CREATOR;
}

#保持R文件不被混淆，否则，你的反射是获取不到资源id的
-keepclassmembers class **.R$* {
    public static <fields>;
}

# The support library contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version.  We know about them, and they are safe.
#v4包下的文件都不要混淆 -dontwarn   如果有警告也不终止 
-dontwarn android.support.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

#需要序列化和反序列化的类不能被混淆（注：Java反射用到的类也不能被混淆）  
-keepnames class * implements java.io.Serializable 

#保护实现接口Serializable的类中，指定规则的类成员不被混淆  
-keepclassmembers class * implements java.io.Serializable {  
    static final long serialVersionUID;  
    private static final java.io.ObjectStreamField[] serialPersistentFields;  
    !static !transient <fields>;  
    private void writeObject(java.io.ObjectOutputStream);  
    private void readObject(java.io.ObjectInputStream);  
    java.lang.Object writeReplace();  
    java.lang.Object readResolve();  
} 

-keep class android.support.v4.app.**{*;}  
-keep class android.support.v4.** { *; }  
-keep interface android.support.v4.app.** { *; }  
-keep public class * extends android.support.v4.**  

# 保留我们使用的四大组件，自定义的Application等等这些类不被混淆
# 因为这些子类都有可能被外部调用
-keep public class * extends android.app.Fragment
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application 
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider 
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class * extends android.view.View   

# 对WebView的处理
-keepclassmembers class * extends android.webkit.WebViewClient {  
  public void *(android.webkit.WebView,java.lang.String,android.graphics.Bitmap);  
  public boolean *(android.webkit.WebView,java.lang.String);  
} 

-keepclassmembers class * extends android.webkit.WebChromeClient {  
  public void *(android.webkit.WebView,java.lang.String);  
} 

# 对于带有回调函数onXXEvent的，不能被混淆
#-keepclassmembers class * {
#    void *(**On*Event);
#}

# 保留内部类不被混淆
#-keep public class com.opentexas.gametexas.ScreenShotUtil$* { *; }

# 处理反射


# 不混淆第三方jar包
# sharesdk
-keep class cn.sharesdk.**{*;}
-keep class com.sina.**{*;}
-keep class **.R$* {*;}
-keep class **.R{*;}
-keep class com.mob.**{*;}
-dontwarn com.mob.**
-dontwarn cn.sharesdk.**
-dontwarn **.R$*

# line
-keep class com.linecorp.**{*;}
-dontwarn com.linecorp.**

# 友盟
-keep class com.umeng.** {*;}
-keepclassmembers class * {
   public <init> (org.json.JSONObject);
}
-dontwarn com.umeng.**

# 信鸽
-keep class com.tencent.mid.**{*;}
-keep class com.qq.taf.jce.** {*;}
-keep class com.jpg.** {*;}
-keep class com.tencent.android.tpush.**{*;}

# core
-keep class android.support.customtabs.**{*;}
-keep class org.cocos2dx.**{*;}
-keep class android.support.v7.**{*;}

# facebook
-keep class bolts.**{*;}
-keep class com.facebook.**{*;}
#-dontwarn bolts.**
#-dontwarn com.facebook.**

# giantvoice
-keep class com.iflytek.**{*;}
-keep class com.a.**{*;}
-keep class com.lw.RecordImage.**{*;}
-keep class com.ztgame.**{*;}
-keep class org.webrtc.**{*;}
-dontwarn com.iflytek.**
-dontwarn com.a.**
-dontwarn com.lw.RecordImage.**
-dontwarn com.ztgame.**
-dontwarn org.webrtc.**

# lua与 java 互调不能混淆
-keep class com.opentexas.cocoslib.** { *; }

# sharesdk
-keep class com.opentexas.cocoslib.sharesdk.ShareSDKBridge { *; }

# line
-keep class com.opentexas.cocoslib.line.LineBridge { *; }

# 友盟
-keep class com.opentexas.cocoslib.umeng.UmengBridge { *; }

# 信鸽
-keep class com.opentexas.cocoslib.xinge.XinGePushBridge { *; }

# iab
-keep class com.opentexas.cocoslib.iab.InAppBillingBridge { *; }

# core
-keep class com.opentexas.cocoslib.core.** { *; }

# facebook
-keep class com.opentexas.cocoslib.facebook.FacebookBridge { *; }

# giantvoice
-keep class com.opentexas.cocoslib.giantvoice.GiantVoiceBridge { *; }